buildscript {
    
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.41'
    id 'kotlinx-serialization' version '1.3.41'
}

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    mavenCentral()
}

def ktor_version = '1.1.3'
def logback_version = '1.2.3'

kotlin {
    /*jvm()
    js {
        browser {
        }
    }*/

    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.js, 'js') {
            configure([compilations.main, compilations.test]) {
                tasks.getByName(compileKotlinTaskName).kotlinOptions {
                    sourceMap = true
                    moduleKind = "commonjs"
                    metaInfo = true
                    sourceMapEmbedSources = "always"
                }
            }
        }
    }
    
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$kotlinx_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinx_version"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$kotlinx_version"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

/*jvmJar {
    dependsOn(jsBrowserWebpack)
    from(new File(jsBrowserWebpack.entry.name, jsBrowserWebpack.outputPath))
}

task run(type: JavaExec, dependsOn: [jvmJar]) {
    group = "application"
    main = "sample.SampleJvmKt"
    classpath(configurations.jvmRuntimeClasspath, jvmJar)
    args = []
}*/

def jsCompilations = kotlin.targets.js.compilations
def npmSharedPackage = "./npm/packages/shared"

task makeNpmHappy(dependsOn: [jsMainClasses]) {
    doLast {
        // for running tests
        copy {
            from jsCompilations.main.output
            jsCompilations.test.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath)
                }
            }
            include '*.js'
            into 'node_modules'
        }

        copy {
            jsCompilations.main.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath)
                }
            }
            include '*.js'
            into "$npmSharedPackage/node_modules"
        }

        copy {
            from "package.json"
            from jsCompilations.main.output
            into npmSharedPackage
        }
    }
}

assemble.dependsOn(makeNpmHappy)